variant: fcos
version: 1.4.0

passwd:
  users:
    - name: core
      password_hash: $y$j9T$ESI.95m/DiovKyPsYz/0r.$OEmQuEn4lQf7SZxEbccz/MaYZJkec4eKFWhXYivblj1
      ssh_authorized_keys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC2qCYXhOtEf7ZcI+gsasDOAA++IaoDnLfVUzt0h9ScZQqpaCJJ5/0yGM2WfX5NFUSPDvC5JIZ9JOjSMM94XW/ajLskxVYROwT/9g2R7H7crUHiRNVGXnse0/5fjt4plhkedvcsFDZCdCQi9mTgzgwPAN5HUJhd2eMrjZ3RByftcK6wORwoVgkJkO3THxzRgMWLiPsMDUrVzUwonZKH9Zk3Ei0JvQMsitF7kM8vGuvPH8yeNEN5JzHVrE3ZQZA1KT/whXHEbhTogtqn5MGEsmriqC5ejCvHQh6jKdkm02LwDff7E8hdtIBJtYowKtVHWapR783gvzGxFrYX66CFBBi7Om0Vn/RZWxzK4PJv4jU4ykBh1wTghtcUJMJMZ6k0eXKfVq0yR7Nk8uU2X7qdRKsXIio7IYwohS/qJmn5GmXyzXKt7zdnuh7Vo4pWo6+dxizlR8VXsQgrYFG5b9uNSPDhWT2laTGMvC8J6ZxL/LGnxPFpnDtauW1M5PDVYkC6uTs= rmohan@fedora"

systemd:
  units:
  - name: run-k3s-installer.service
    enabled: true
    contents: |
      [Unit]
      After=network-online.target
      Wants=network-online.target
      Before=systemd-user-sessions.service
      OnFailure=emergency.target
      OnFailureJobMode=replace-irreversibly
      ConditionPathExists=!/var/lib/k3s-installed
      [Service]
      RemainAfterExit=yes
      Type=oneshot
      ExecStart=/usr/local/bin/run-k3s-installer
      ExecStartPost=/usr/bin/touch /var/lib/k3s-installed
      StandardOutput=kmsg+console
      StandardError=kmsg+console
      [Install]
      WantedBy=multi-user.target
  
  - name: layer-helm.service
    enabled: true
    contents: |
      [Unit]
      After=run-k3s-installer.service
      Before=run-argocdhelminstall.service
      Description=Layer helm as with rpm-ostree
      # We run after `systemd-machine-id-commit.service` to ensure that
      # `ConditionFirstBoot=true` services won't rerun on the next boot.
      After=systemd-machine-id-commit.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/usr/bin/rpm-ostree install helm --reboot

      [Install]
      WantedBy=multi-user.target
  
  - name: run-argocdhelminstall.service
    enabled: true
    contents: |
      [Unit]
      After=layer-helm.service
      Wants=layer-helm.service
      Before=systemd-user-sessions.service
      OnFailure=emergency.target
      OnFailureJobMode=replace-irreversibly
      ConditionPathExists=!/var/lib/argocdhelm-installed
      [Service]
      RemainAfterExit=yes
      Type=oneshot
      ExecStart=/usr/local/bin/argocdhelminstall
      ExecStartPost=/usr/bin/touch /var/lib/argocdhelm-installed
      StandardOutput=kmsg+console
      StandardError=kmsg+console
      [Install]
      WantedBy=multi-user.target

storage:
  files:
    - path: /usr/local/bin/run-k3s-installer
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" sh -
    
    - path: /usr/local/bin/argocdhelminstall
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          kubectl create namespace argocd
          helm install my-argo-cd argo/argo-cd --namespace argocd --version 5.21.0 -f /var/application.yaml

    # Set hostname
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: masternode1
    
    - path: /etc/NetworkManager/system-connections/'Wired connection 1.nmconnection'
      mode: 0600
      contents:
        inline: |
          [connection]
          id=Wired connection 1
          type=ethernet
          autoconnect-priority=-999
          interface-name=enp1s0

          [ethernet]

          [ipv4]
          address1=10.42.42.100/24,10.42.42.1
          dns=8.8.8.8;
          method=manual

          [ipv6]
          addr-gen-mode=default
          method=auto

          [proxy]
    
    - path: /etc/rancher/k3s/k3s.yaml
      mode: 0600
      contents:
        inline: |
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJlRENDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdGMyVnkKZG1WeUxXTmhRREUyTnpJMU9URTFOek13SGhjTk1qTXdNVEF4TVRZME5qRXpXaGNOTXpJeE1qSTVNVFkwTmpFegpXakFqTVNFd0h3WURWUVFEREJock0zTXRjMlZ5ZG1WeUxXTmhRREUyTnpJMU9URTFOek13V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFSMndudHdGeVM2UmtFNUtWalRGcVJGSitZa2dleHhjMUdhZkw4UTJBbFEKVHlUNVhJSnUzR0JMK0NSaTNWZGx6dFU5eXV2LzhReFZneFNJSGlXYU5NMmRvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVXZFeDN0d05kUVM5WjViUlN1Ri9BCmVkdDZVQVV3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUprTXZzMFJpQk1CdEc3UmZLOWE0TFl5Tml2RGV4ZzgKMmhFWVUxWG44SnRoQWlFQW5oeWpXSW9HWHlYanZwYVc2blQyTTBaVU5zRUFKd3JBSHpyMUQ3QmgvbDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
              server: https://127.0.0.1:6443
            name: default
          contexts:
          - context:
              cluster: default
              user: default
            name: default
          current-context: default
          kind: Config
          preferences: {}
          users:
          - name: default
            user:
              client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrVENDQVRlZ0F3SUJBZ0lJZmNGTEllS0ZNUEF3Q2dZSUtvWkl6ajBFQXdJd0l6RWhNQjhHQTFVRUF3d1kKYXpOekxXTnNhV1Z1ZEMxallVQXhOamN5TlRreE5UY3pNQjRYRFRJek1ERXdNVEUyTkRZeE0xb1hEVEkwTURFdwpNVEUyTkRZeE0xb3dNREVYTUJVR0ExVUVDaE1PYzNsemRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41CmMzUmxiVHBoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJHaFU3T0dzTHByNWFETHYKLzJOTUlBSlZjT0tvMTk0UWRhY3RkRjNZNytwdU14NExJcXVudWtEeTBXK2ptL2h6cDgrZ3RvcEZLK2xERlVNMgpyUW5SRE42alNEQkdNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFmCkJnTlZIU01FR0RBV2dCUUROcmptdDMrWlVVMTZ0UE9FZGVmZ2crNFV4REFLQmdncWhrak9QUVFEQWdOSUFEQkYKQWlFQWk2b1VLMTNrTmh0UlZDSjdBQThjZWJjbWx4WlVDYldmVkhOeDJ5VWwrUGtDSUNBTUJqUzRHcU13bE50WgpVRFdFb0dXNE9hQ2NUSWhuUjJmc2R4MTdMazFCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJlRENDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdFkyeHAKWlc1MExXTmhRREUyTnpJMU9URTFOek13SGhjTk1qTXdNVEF4TVRZME5qRXpXaGNOTXpJeE1qSTVNVFkwTmpFegpXakFqTVNFd0h3WURWUVFEREJock0zTXRZMnhwWlc1MExXTmhRREUyTnpJMU9URTFOek13V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFSTnRuQWhUSGdBTXJ0L1F4TXlPQ21CNEJOUDMyRWFuazVNbEpXcEZRb2cKQnhqeUc0OFlCSnUxaExwMFdjeGIxM0RZd2FreVNhdzRNV1NxZXoxb2tudnpvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUF6YTQ1cmQvbVZGTmVyVHpoSFhuCjRJUHVGTVF3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUpTNy9VOUphWjF6TnE0cXF2WGpndnRESk9UUURhb1IKcng2VVN6YUF3bWJ3QWlFQXRGT1B0d3MwbkNBeXQ2bGx1b1h2OTZJaDNVa2o1dWhuTTRIUnZBUGtlL2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
              client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUI2clFucEZLVnRxK3JSdWVtaWJ2YUpEY1UxNW1TdEJtZ1d6dkcwaHJHWjdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFYUZUczRhd3VtdmxvTXUvL1kwd2dBbFZ3NHFqWDNoQjFweTEwWGRqdjZtNHpIZ3NpcTZlNgpRUExSYjZPYitIT256NkMyaWtVcjZVTVZRemF0Q2RFTTNnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    
    - path: /var/application.yaml
      mode: 0600
      contents:
        inline: |
          server:
            additionalApplications:
            - name: cluster-config
              namespace: argocd
              project: default
              source:
                repoURL: https://github.com/lobiplayer/myk8s_argocd.git
                targetRevision: HEAD
                path: cluster
                directory:
                  recurse: true
              destination:
                server: https://kubernetes.default.svc
              syncPolicy:
                automated:
                  prune: false
                  selfHeal: false