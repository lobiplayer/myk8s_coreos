variant: fcos
version: 1.4.0

passwd:
  users:
    - name: core
      password_hash: $y$j9T$ESI.95m/DiovKyPsYz/0r.$OEmQuEn4lQf7SZxEbccz/MaYZJkec4eKFWhXYivblj1
      ssh_authorized_keys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC2qCYXhOtEf7ZcI+gsasDOAA++IaoDnLfVUzt0h9ScZQqpaCJJ5/0yGM2WfX5NFUSPDvC5JIZ9JOjSMM94XW/ajLskxVYROwT/9g2R7H7crUHiRNVGXnse0/5fjt4plhkedvcsFDZCdCQi9mTgzgwPAN5HUJhd2eMrjZ3RByftcK6wORwoVgkJkO3THxzRgMWLiPsMDUrVzUwonZKH9Zk3Ei0JvQMsitF7kM8vGuvPH8yeNEN5JzHVrE3ZQZA1KT/whXHEbhTogtqn5MGEsmriqC5ejCvHQh6jKdkm02LwDff7E8hdtIBJtYowKtVHWapR783gvzGxFrYX66CFBBi7Om0Vn/RZWxzK4PJv4jU4ykBh1wTghtcUJMJMZ6k0eXKfVq0yR7Nk8uU2X7qdRKsXIio7IYwohS/qJmn5GmXyzXKt7zdnuh7Vo4pWo6+dxizlR8VXsQgrYFG5b9uNSPDhWT2laTGMvC8J6ZxL/LGnxPFpnDtauW1M5PDVYkC6uTs= rmohan@fedora"

systemd:
  units:

  # Service that installs k3s
  - name: run-k3s-installer.service
    enabled: true
    contents: |
      [Unit]
      After=network-online.target
      Wants=network-online.target
      Before=systemd-user-sessions.service
      OnFailure=emergency.target
      OnFailureJobMode=replace-irreversibly
      ConditionPathExists=!/var/lib/k3s-installed
      [Service]
      RemainAfterExit=yes
      Type=oneshot
      ExecStart=/usr/local/bin/run-k3s-installer
      ExecStartPost=/usr/bin/touch /var/lib/k3s-installed
      StandardOutput=kmsg+console
      StandardError=kmsg+console
      [Install]
      WantedBy=multi-user.target
  
  # Service that installs Helm
  - name: run-helm-installer.service
    enabled: true
    contents: |
      [Unit]
      After=run-k3s-installer.service
      Wants=run-k3s-installer.service
      Before=systemd-user-sessions.service
      OnFailure=emergency.target
      OnFailureJobMode=replace-irreversibly
      ConditionPathExists=!/var/lib/helm-installed
      [Service]
      RemainAfterExit=yes
      Type=oneshot
      ExecStart=/usr/local/bin/run-helm-installer
      ExecStartPost=/usr/bin/touch /var/lib/helm-installed
      StandardOutput=kmsg+console
      StandardError=kmsg+console
      [Install]
      WantedBy=multi-user.target

  # Service that installs Argocd through Helm
  - name: run-argocd-helminstall.service
    enabled: true
    contents: |
      [Unit]
      After=run-helm-installer.service
      Wants=run-helm-installer.service
      Before=systemd-user-sessions.service
      OnFailure=emergency.target
      OnFailureJobMode=replace-irreversibly
      ConditionPathExists=!/var/lib/argocd-helminstall
      [Service]
      RemainAfterExit=yes
      Type=oneshot
      ExecStart=/usr/local/bin/argocd-helminstall
      ExecStartPost=/usr/bin/touch /var/lib/argocd-helminstall
      StandardOutput=kmsg+console
      StandardError=kmsg+console
      [Install]
      WantedBy=multi-user.target


storage:
  files:
    # Bash script that installs k3s server
    - path: /usr/local/bin/run-k3s-installer
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --disable traefik --flannel-backend=host-gw" sh -
    
    # Bash script that installs Helm
    - path: /usr/local/bin/run-helm-installer
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          cd /var
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    
    #  Bash script that installs Argocd through Helm
    - path: /usr/local/bin/argocd-helminstall
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          sudo kubectl create namespace argocd
          sudo helm repo add argo https://argoproj.github.io/argo-helm
          sudo helm install my-argo-cd argo/argo-cd --namespace argocd --version 5.22.0 --kubeconfig /etc/rancher/k3s/k3s.yaml
          sudo kubectl apply -f /var/root.yaml

    # Set hostname
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: masternode1
    
    # Set network settings
    - path: /etc/NetworkManager/system-connections/'Wired connection 1.nmconnection'
      mode: 0600
      contents:
        inline: |
          [connection]
          id=Wired connection 1
          type=ethernet
          autoconnect-priority=-999
          interface-name=enp1s0

          [ethernet]

          [ipv4]
          address1=10.42.42.100/24,10.42.42.1
          dns=10.42.42.1;
          method=manual

          [ipv6]
          addr-gen-mode=default
          method=auto

          [proxy]

    # Configuration for ArgoCD
    - path: /var/root.yaml
      mode: 0600
      contents:
        inline: |
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: root
            namespace: argocd
          spec:
            project: default
            source:
              path: cluster/
              repoURL: https://github.com/lobiplayer/myk8s_argocd.git
              targetRevision: HEAD
              directory:
                  recurse: true
            destination:
              server: "https://kubernetes.default.svc"
            syncPolicy:
                automated:
                  prune: false
                  selfHeal: false